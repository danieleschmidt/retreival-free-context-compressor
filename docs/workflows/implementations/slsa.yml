name: SLSA Level 3 Compliance

on:
  push:
    tags: ['v*']
  workflow_dispatch:

permissions:
  contents: read
  id-token: write
  attestations: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
      
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
          
      - name: Build artifacts
        run: python -m build
        
      - name: Generate hashes
        id: hash
        run: |
          cd dist/
          echo "hashes=$(sha256sum * | base64 -w0)" >> "$GITHUB_OUTPUT"
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist/
          if-no-files-found: error
          retention-days: 5

  provenance:
    needs: [build]
    permissions:
      actions: read
      id-token: write
      contents: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.9.0
    with:
      base64-subjects: "${{ needs.build.outputs.hashes }}"
      upload-assets: true

  verify:
    needs: [build, provenance]
    runs-on: ubuntu-latest
    permissions:
      actions: read
      id-token: write
      contents: write
      
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          
      - name: Download provenance
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.provenance.outputs.provenance-name }}
          
      - name: Install SLSA verifier
        run: |
          curl -sSL https://github.com/slsa-framework/slsa-verifier/releases/latest/download/slsa-verifier-linux-amd64 -o slsa-verifier
          chmod +x slsa-verifier
          
      - name: Verify SLSA provenance
        run: |
          ./slsa-verifier verify-artifact dist/* \
            --provenance-path ${{ needs.provenance.outputs.provenance-name }} \
            --source-uri github.com/${{ github.repository }} \
            --source-tag ${{ github.ref_name }}

  security-scorecard:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      id-token: write
      contents: read
      actions: read
      
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          
      - name: Run analysis
        uses: ossf/scorecard-action@v2.3.1
        with:
          results_file: results.sarif
          results_format: sarif
          publish_results: true
          
      - name: Upload SARIF results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif